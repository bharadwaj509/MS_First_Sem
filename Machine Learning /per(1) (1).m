function [w, iterations, e]=per(x, y, eta, error, i0)%% [w, iterations, e] = delta(x,y, eta, error, i0)%% implements the basic perceptron   rule;%% x : data ; y : true output; eta: learning rate; %% error : desired approximation error;%% i0: threshold on the number of epochs %% (iterations through the whole data set[r, c]=size(x); w=rand(1,c+1); iterations=0;e=error;while e >= error &&  iterations <=i0 iterations=iterations+1; wrong=0; for rows=1:r,    if sum(w .* [x(rows,:),1])<0, out=-1; else out=1; end     dw=eta*(y(rows)-out)*[x(rows,:),1];     w=w+dw; end %% compute current errorfor rows=1:r,    if y(rows)*(sum(w .* [x(rows,:),1])) < 0, wrong=wrong+1; endende=wrong/r;end